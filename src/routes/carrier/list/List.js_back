import React from 'react'
import PropTypes from 'prop-types'
import { Table, Modal,Button } from 'antd'
import classnames from 'classnames'
import { DropOption } from 'components'
import { Link } from 'react-router-dom'
import queryString from 'query-string'
import AnimTableBody from 'components/DataTable/AnimTableBody'
import styles from '../lines/List.less'
import { Divider } from 'antd';

const confirm = Modal.confirm

const List = ({
  onDeleteItem, onEditItem, isMotion, location, ...tableProps
}) => {
  location.query = queryString.parse(location.search)

  const handleMenuClick = (record, e) => {
    if (e.key === '1') {
      onEditItem(record)
    } else if (e.key === '2') {
      confirm({
        title: 'Are you sure delete this record?',
        onOk () {
          onDeleteItem(record.id)
        },
      })
    }
  }

  const columns = [
    {
      title: '承运商名称',
      dataIndex: 'carrierName',
      key: 'carrierName',
      width: 150,
    }, {
      title: '承运商简称',
      dataIndex: 'carrierShortName',
      key: 'carrierShortName',
      width: 150,
    }, {
      title: '法人/联系方式',
      dataIndex: 'legalCombination',
      key: 'legalCombination',
      width: 200,
    }, {
      title: '主要业务联系人/联系方式',
      dataIndex: 'linkCombination',
      key: 'linkCombination',
      width: 200,
    }, {
      title: '保险费',
      dataIndex: 'insuranceId',
      key: 'insuranceId',
      width: 150,
    },{
      title: '状态',
      dataIndex: 'status',
      key: 'status',
      width: 150,
      render: text => (<span>{text === 0
        ? '开启'
        : '关闭'}</span>),
    },{
      title: '备注',
      dataIndex: 'remark',
      key: 'remark',
      width: 300,
    },{
      title: '操作',
      key: 'operation',
      width: 180,
      render: (text, record) => (
        <span className={styles.operation}>
          <DropOption onMenuClick={e => handleMenuClick(record, e)} menuOptions={[{ key: '1', name: '编辑承运商' }, { key: '2', name: '编辑业务员' },{ key: '3', name: '新增运输区域' },]} />
          <Divider type="vertical" style={{background: 'rgb(211, 211, 211)' }} />
          <a href="#" onClick={e => deleteComfim(record.id, e)}>暂停</a>
          <Divider type="vertical" style={{background: 'rgb(211, 211, 211)' }} />
          <a href="#" onClick={e => deleteComfim(record.id, e)}>删除</a>
        </span>
      )
    },
  ]

  const getBodyWrapperProps = {
    page: location.query.page,
    current: tableProps.pagination.current,
  }

  const getBodyWrapper = (body) => { return isMotion ? <AnimTableBody {...getBodyWrapperProps} body={body} /> : body }

  return (
    <div>
      <Table
        {...tableProps}
        className={classnames({ [styles.table]: true, [styles.motion]: isMotion })}
        bordered
        columns={columns}
        simple
        size="small"
        rowKey={record => record.id}
        getBodyWrapper={getBodyWrapper}
      />
    </div>
  )
}

List.propTypes = {
  onDeleteItem: PropTypes.func,
  onEditItem: PropTypes.func,
  isMotion: PropTypes.bool,
  location: PropTypes.object,
}

export default List
